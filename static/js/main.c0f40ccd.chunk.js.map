{"version":3,"sources":["components/assets/arrow-left-solid.svg","components/Header.js","components/ContactList.js","components/SearchContact.js","components/Profile.js","components/Main.js","components/services/fetchData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","EnhancedHeaderContent","className","showProfile","back","show","onClick","backHandler","src","BackButton","alt","Header","ListItem","userInfo","index","lastName","firstName","profileImage","ContactList","users","length","map","user","key","id","SearchItem","props","type","name","onChange","e","filter","target","value","handleSearch","placeholder","Profile","email","phone","address","href","title","Object","keys","EnhancedContactList","otherProps","withDetail","search","withSearch","Main","useState","filteredUsers","setFilteredUsers","useEffect","allUsers","setAllUsers","a","async","fetch","then","data","json","response","fetchUserData","setShowProfile","param","toLowerCase","includes","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0f40ccd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-left-solid.713fe29d.svg\";","import React from 'react';\nimport './styles/Header.css';\nimport BackButton from './assets/arrow-left-solid.svg';\n\nconst HeaderContent = () => {\n  return <div className='header_title'>People</div>;\n};\n\nconst withBackButton = Component => {\n  return ({ showProfile }) => {\n    let back = null;\n    if (showProfile.show) {\n      back = (\n        <div className={`back_button`} onClick={showProfile.backHandler}>\n          <img src={BackButton} alt='Back' className={`back_button_shown`} />\n        </div>\n      );\n    }\n    return (\n      <>\n        {back}\n        <Component />\n      </>\n    );\n  };\n};\n\nconst EnhancedHeaderContent = withBackButton(HeaderContent);\n\nconst Header = ({ showProfile }) => {\n  return (\n    <header>\n      <div className='container clearfix'>\n        <EnhancedHeaderContent showProfile={showProfile} />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './styles/ContactList.css';\n\nconst ListItem = ({ userInfo, onClick, index }) => {\n  const { lastName, firstName, profileImage } = userInfo;\n  return (\n    <div className='list_item_wrapper clearfix' onClick={() => onClick(index)}>\n      <img className='list_item_image' src={profileImage} alt='profile_image' />\n      <div className='list_item_info'>\n        <div>{`${firstName} ${lastName}`}</div>\n      </div>\n    </div>\n  );\n};\n\nconst ContactList = ({ users, onClick }) => {\n  return (\n    <div className='contact_list container'>\n      {users.length > 0 &&\n        users.map((user, index) => (\n          <ListItem\n            key={user.id}\n            userInfo={user}\n            onClick={id => onClick(id)}\n            index={index}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport './styles/SearchContact.css';\nconst SearchItem = props => {\n  const handleSearch = e => {\n    let filter = e.target.value;\n    props.handleSearch(filter);\n  };\n\n  return (\n    <div className='container'>\n      <input\n        className='search_item'\n        type='text'\n        name='item'\n        onChange={handleSearch}\n        placeholder='Search'\n      />\n    </div>\n  );\n};\n\nexport default SearchItem;\n","import React from 'react';\nimport './styles/Profile.css';\n\nconst Profile = ({ userInfo }) => {\n  const { email, phone, address, lastName, firstName, profileImage } = userInfo;\n  return (\n    <div className='profile_wrapper container'>\n      <img className='profile_image' src={profileImage} alt='profile_image' />\n      <div className='profile_info'>\n        <div className='profile_info_title'>Basic Info</div>\n        <div>\n          name\n          <span>{`${firstName} ${lastName}`}</span>\n        </div>\n        <div>\n          email\n          <span>\n            <a href={`mailto:${email}`} title='Send mail'>\n              {email}\n            </a>\n          </span>\n        </div>\n        <div>\n          phone\n          <span title='Call'>\n            <a href={`tel:${phone}`}>{phone}</a>\n          </span>\n        </div>\n      </div>\n      <div className='profile_info'>\n        <div className='profile_info_title'>Address Details</div>\n        {Object.keys(address).map((key, index) => {\n          return (\n            <div key={index}>\n              {key}\n              <span>{address[key]}</span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport ContactList from './ContactList';\nimport SearchContact from './SearchContact';\nimport Profile from './Profile';\nimport { fetchUserData } from './services/fetchData';\nimport './styles/Main.css';\n\nconst withDetail = Component => {\n  return props => {\n    const { showProfile, ...otherProps } = props;\n    if (showProfile && showProfile.show) {\n      return <Profile userInfo={props.users[showProfile.id]} />;\n    }\n    return <Component {...otherProps} />;\n  };\n};\n\nconst withSearch = Component => {\n  return ({ search, ...otherProps }) => {\n    return (\n      <>\n        <SearchContact handleSearch={search} />\n        <Component {...otherProps} />\n      </>\n    );\n  };\n};\n\nconst EnhancedContactList = withDetail(withSearch(ContactList));\n\nconst Main = () => {\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  useEffect(() => {}, []);\n\n  const [allUsers, setAllUsers] = useState([]);\n  useEffect(() => {\n    fetchUserData().then(data => {\n      setAllUsers(data);\n      setFilteredUsers(data);\n    });\n  }, []);\n\n  const [showProfile, setShowProfile] = useState({});\n  useEffect(() => {}, []);\n\n  const filterContacts = (param = '') => {\n    setFilteredUsers(\n      allUsers &&\n        allUsers.filter(user => {\n          return (\n            user.firstName.toLowerCase().includes(param.toLowerCase()) ||\n            user.lastName.toLowerCase().includes(param.toLowerCase())\n          );\n        })\n    );\n  };\n\n  const backHandler = () => {\n    setShowProfile({ show: false });\n  };\n\n  const handleOnClick = id => {\n    setShowProfile({ show: true, id, backHandler });\n  };\n\n  return (\n    <div className='Main'>\n      <Header showProfile={showProfile} />\n      <div className='below_header'>\n        <EnhancedContactList\n          users={filteredUsers}\n          onClick={handleOnClick}\n          showProfile={showProfile}\n          backHandler={backHandler}\n          search={filterContacts}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","export const url =\n  'https://cors-anywhere.herokuapp.com/https://mock-io.herokuapp.com/users';\n\nexport const fetchUserData = async () => {\n  const response = await fetch(url).then(data => {\n    return data.json();\n  });\n  return response;\n};\n","import React from 'react';\nimport Main from './components/Main';\nimport './components/styles/App.css';\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}